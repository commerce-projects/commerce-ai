plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.graalvm.buildtools.native' version '0.10.6'
}

group = 'org.simplecommerce.ai'
version = '0.0.1-SNAPSHOT'
description = 'Simple Commerce'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(22)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springAiVersion', "1.0.0")
    set('scVersion', project.version)
    set('picocliVersion', "4.7.7")
    set('jlineVersion', "3.30.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation('org.springframework.ai:spring-ai-starter-model-ollama') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-webflux'
    }
	implementation 'org.springframework.ai:spring-ai-starter-model-chat-memory-repository-jdbc'
	implementation 'org.springframework.ai:spring-ai-pdf-document-reader'
	implementation 'org.springframework.ai:spring-ai-markdown-document-reader'
	implementation 'org.springframework.ai:spring-ai-jsoup-document-reader'
	implementation "org.jline:jline:${jlineVersion}"
	implementation "org.jline:jline-terminal-ffm:${jlineVersion}"
	implementation "org.jline:jline-terminal-jni:${jlineVersion}"
    implementation "info.picocli:picocli-spring-boot-starter:${picocliVersion}"
	implementation "info.picocli:picocli-shell-jline3:${picocliVersion}"
	annotationProcessor "info.picocli:picocli-codegen:${picocliVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.ai:spring-ai-spring-boot-testcontainers'
	testImplementation 'org.testcontainers:ollama:1.21.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

springBoot {
    buildInfo {
		properties {
			additional = [
				'description' : project.getDescription(),
			]
		}
	}
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

graalvmNative {
    binaries {
        main {
            imageName = 'sc'
            buildArgs.add('--verbose')
            buildArgs.add('--enable-native-access=ALL-UNNAMED')
        }
    }
    metadataRepository {
        enabled = true
    }
}
